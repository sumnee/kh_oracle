--day08----------------------------

--kh계정 소유의 한 employee, job, department테이블의 일부정보를 사용자에게 공개하려고 한다.
-- 사원아이디, 사원명, 직급명, 부서명, 관리자명, 입사일의 컬럼정보를 뷰(v_emp_info)를 (읽기 전용으로) 생성하여라.
CREATE OR REPLACE VIEW V_EMP_INFO
AS SELECT E.EMP_ID 사원아이디, E.EMP_NAME 사원명, JOB_NAME 직급명, DEPT_TITLE 부서명, M.EMP_NAME 관리자명
FROM EMPLOYEE E
LEFT JOIN JOB USING(JOB_CODE)
LEFT JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
LEFT JOIN EMPLOYEE M ON M.EMP_ID = E.MANAGER_ID;

SELECT * FROM V_EMP_INFO;

CREATE OR REPLACE FORCE VIEW V_FORCE_STH
AS SELECT EMP_ID, EMP_NAME FROM NTH_TBL;
SELECT * FROM V_FORCE_STH;
--FORCE : 테이블, 컬럼, 함수 등이 없어도 강제로 생성

CREATE OR REPLACE VIEW V_EMP_D6
AS SELECT EMP_ID, EMP_NAME, SALARY, DEPT_CODE FROM EMPLOYEE
WHERE DEPT_CODE = 'D6' WITH CHECK OPTION;
--WITH CHECK OPTION : WHERE절 조건에 사용한 컬럼값 수정 불가능
SELECT * FROM V_EMP_D6;
UPDATE V_EMP_D6 SET SALARY=3800000 WHERE EMP_ID = '203';
UPDATE V_EMP_D6 SET DEPT_CODE = 'D1' WHERE SALARY >= 3900000; --불가능

CREATE OR REPLACE VIEW V_EMPLOYEE
AS SELECT EMP_ID, EMP_NAME, DEPT_CODE
FROM EMPLOYEE WITH READ ONLY;
--WITH READ ONLY : 읽기 전용
UPDATE V_EMPLOYEE SET EMP_NAME = '수정' WHERE DEPT_CODE = 'D6'; --불가능

--@실습문제
--고객이 상품주문시 사용할 테이블 TBL_ORDER를 만들고, 다음과 같이 컬럼을 구성하세요
-- ORDER_NO(주문NO) : PK
-- USER_ID(고객아이디)
-- PRODUCT_ID(주문상품아이디)
-- PRODUCT_CNT(주문개수) 
-- ORDER_DATE : DEFAULT SYSDATE
CREATE TABLE TBL_ORDER(
    ORDER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    PRODUCT_ID VARCHAR(30),
    PRODUCT_CNT NUMBER,
    ORDER_DATE DATE DEFAULT SYSDATE
);
CREATE SEQUENCE SEQ_ORDERNO;
INSERT INTO TBL_ORDER 
VALUES(SEQ_ORDERNO.NEXTVAL, 'kang', 'saewookkang', 5, DEFAULT);
INSERT INTO ORDER_TBL
VALUES(SEQ_ORDERNO.NEXTVAL, 'gam', 'gamjakkang', 30, DEFAULT);
INSERT INTO ORDER_TBL
VALUES(SEQ_ORDERNO.NEXTVAL, 'ring', 'onionring', 50, DEFAULT);
SELECT * FROM ORDER_TBL;


-- 실습문제2
--KH_MEMBER 테이블을 생성
--MEMBER_ID	NUNBER
--MEMBER_NAME	VARCHAR2(20)
--MEMBER_AGE	NUMBER
--MEMBER_JOIN_COM	NUMBER
--이때 해당 사원들의 정보를 INSERT 해야 함
--ID 값과 JOIN_COM은 SEQUENCE 를 이용하여 정보를 넣고자 함
CREATE TABLE KH_MEMBER(
    MEMBER_ID NUMBER,
    MEMBER_NAME VARCHAR2(20),
    MEMBER_AGE NUMBER,
    MEMBER_JOIN_COM NUMBER
);
--1. ID값은 500 번 부터 시작하여 10씩 증가하여 저장 하고자 함
--2. JOIN_COM 값은 1번부터 시작하여 1씩 증가하여 저장 해야 함
--(ID 값과 JOIN_COM 값의 MAX는 10000으로 설정)
CREATE SEQUENCE SEQ_MEMBERID
START WITH 500
INCREMENT BY 10
MAXVALUE 10000;
CREATE SEQUENCE SEQ_MEMBERJOIN
MAXVALUE 10000;
--	500		        홍길동		20		        1
--	510		        김말똥		30		        2
--	520		        삼식이		40		        3
--	530		        고길똥		24		        4
INSERT INTO KH_MEMBER
VALUES(SEQ_MEMBERID.NEXTVAL, '홍길동', 20, SEQ_MEMBERJOIN.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(SEQ_MEMBERID.NEXTVAL, '김말똥', 30, SEQ_MEMBERJOIN.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(SEQ_MEMBERID.NEXTVAL, '삼식이', 40, SEQ_MEMBERJOIN.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(SEQ_MEMBERID.NEXTVAL, '고길똥', 24, SEQ_MEMBERJOIN.NEXTVAL);
SELECT * FROM KH_MEMBER;


-- #PL/SQL
-- > 오라클 자체에 내장되어 있는 절차적 언어로써 
-- SQL의 단점을 보완하여 SQL 문장내에서 변수의 정의, 조건처리, 반복처리 등을 지원함


-- '선동일' 이라는 사람의 EMP_ID값을 추출하여 ID라는 변수에 넣어주고 PUT_LINE을 통해 출력함
--만약 '선동일' 이라는 사람이 없으면 'No Data!!!' 라는 예외 구문을 출력하도록 함
DECLARE 
    vID NUMBER;
BEGIN 
    SELECT EMP_ID INTO vID FROM EMPLOYEE
    WHERE EMP_NAME = '선동일';
    DBMS_OUTPUT.PUT_LINE('ID='||vID);
EXCEPTION
    WHEN NO_dATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('NO DATA!');
END;
/

--예제1)
--PL/SQL의 SELECT문으로 EMPLOYEE 테이블에서 주민번호와 이름 조회하기
DECLARE
    vNO EMPLOYEE.EMP_NO%TYPE; --%TYPE으로 그 컬럼의 타입을 변수선언 시 사용
    vNAME EMPLOYEE.EMP_NAME%TYPE;
BEGIN
    SELECT EMP_NO 주민번호,EMP_NAME 이름
    INTO vNO, vNAME FROM EMPLOYEE
    WHERE EMP_NAME = '송은희';
    DBMS_OUTPUT.PUT_LINE('주민등록번호 : '||vNO);
    DBMS_OUTPUT.PUT_LINE('이름 : '||vNAME);
END;
/

--예제 2)
--이오리 사원의 이름, 급여, 입사일을 출력하시오
DECLARE
    VNAME EMPLOYEE.EMP_NAME%TYPE;
    VSALARY EMPLOYEE.SALARY%TYPE;
    VHIREDATE EMPLOYEE.HIRE_DATE%TYPE;
BEGIN
    SELECT EMP_NAME, SALARY, HIRE_DATE
    INTO VNAME, VSALARY, VHIREDATE
    FROM EMPLOYEE
    WHERE EMP_NAME = '이오리';
    DBMS_OUTPUT.PUT_LINE('이름 : '||VNAME);
    DBMS_OUTPUT.PUT_LINE('급여 : '||VSALARY);
    DBMS_OUTPUT.PUT_LINE('입사일 : '||VHIREDATE);
END;
/

--예제 3)
--사원번호를 입력 받아서 사원의 사원번호, 이름, 급여, 입사일을 출력하시오
DECLARE
   VENAME EMPLOYEE.EMP_NAME%TYPE;
   VSALARY EMPLOYEE.SALARY%TYPE;
   VHIREDATE EMPLOYEE.HIRE_DATE%TYPE;
BEGIN
   SELECT EMP_NAME, SALARY, HIRE_DATE
   INTO VENAME, VSALARY, VHIREDATE
   FROM EMPLOYEE
   WHERE EMP_ID = '&EMPID';
   DBMS_OUTPUT.PUT_LINE('이름 : '||VENAME);
   DBMS_OUTPUT.PUT_LINE('급여 : '||VSALARY);
   DBMS_OUTPUT.PUT_LINE('입사일 : '||VHIREDATE); 
END;
/

--'&EMPID' 가이드 메세지 : 띄어쓰기, 특수문자 불가능

--예제 4)
-- 해당 사원의 사원번호를 입력시
-- 이름,부서명,직급명이 출력되도록 PL/SQL로 만들어 보시오
DECLARE
    VNAME EMPLOYEE.EMP_NAME%TYPE;
    VDEPTTITLE DEPARTMENT.DEPT_TITLE%TYPE;
    VJOBNAME JOB.JOB_NAME%TYPE;
BEGIN
    SELECT EMP_NAME, DEPT_TITLE, JOB_NAME
    INTO VNAME, VDEPTTITLE, VJOBNAME
    FROM EMPLOYEE
    LEFT JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    LEFT JOIN JOB USING(JOB_CODE)
    WHERE EMP_ID = '&EMPID';
    DBMS_OUTPUT.PUT_LINE('이름 : '|| VNAME);
    DBMS_OUTPUT.PUT_LINE('부서명 : '|| VDEPTTITLE);
    DBMS_OUTPUT.PUT_LINE('직급명 : '|| VJOBNAME);
END;
/

--예제1) 사원번호를 가지고 사원의 사번,이름,급여,보너스율을 출력하고
-- 보너스율이 없으면 '보너스를 지급받지 않는 사원입니다' 를 출력하시오.
DECLARE 
    VEMPID EMPLOYEE.EMP_ID%TYPE;
    VENAME EMPLOYEE.EMP_NAME%TYPE;
    VSALARY EMPLOYEE.SALARY%TYPE;
    VBONUS EMPLOYEE.BONUS%TYPE;
BEGIN
    SELECT EMP_ID, EMP_NAME, SALARY, NVL(BONUS, 0)
    INTO VEMPID, VENAME, VSALARY, VBONUS
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMPID';
    DBMS_OUTPUT.PUT_LINE('사번 : '||VEMPID);
    DBMS_OUTPUT.PUT_LINE('이름 : '||VENAME);
    DBMS_OUTPUT.PUT_LINE('급여 : '||VSALARY);
    IF(VBONUS <> 0 )
    THEN DBMS_OUTPUT.PUT_LINE('보너스 : '|| VBONUS * 100 || '%');
    ELSE DBMS_OUTPUT.PUT_LINE('보너스가 없는 사원임');
    END IF;
END;
/

--예제2) 사원 코드를 입력 받았을때 사번, 이름, 직급코드, 직급명, 소속 값을 출력하시오
--그때, 소속값은 J1,J2 는 임원진, 그외에는 일반직원으로 출력되게 하시오

--## 간단 실습 1 ##
-- 사원 번호를 가지고 해당 사원을 조회, 이때 사원명,부서명 을 출력하여라.
-- 만약 부서가 없다면 부서명을 출력하지 않고,
-- '부서가 없는 사원 입니다' 를 출력
DECLARE 
    VNAME EMPLOYEE.EMP_NAME%TYPE;
    VDTITLE DEPARTMENT.DEPT_TITLE%TYPE;
    VDCODE DEPARTMENT.DEPT_ID%TYPE; 
BEGIN
    SELECT EMP_NAME, DEPT_TITLE, DEPT_ID
    INTO VNAME, VDTITLE, VDCODE
    FROM EMPLOYEE
    LEFT JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    WHERE EMP_ID='&EMPID';
    DBMS_OUTPUT.PUT_LINE('이름 : '||VNAME);
    IF(VDCODE IS NULL)
    THEN DBMS_OUTPUT.PUT_LINE('부서가 없는 사원입니다.');
    ELSE DBMS_OUTPUT.PUT_LINE('부서명 : '||VDTITLE);
    END IF;
END;
/
    

--## 간단 실습2 ##
--사번을 입력 받은 후 급여에 따라 등급을 나누어 출력하도록 하시오 
--그때 출력 값은 사번,이름,급여,급여등급을 출력하시오
--0만원 ~ 99만원 : F
--100만원 ~ 199만원 : E
--200만원 ~ 299만원 : D
--300만원 ~ 399만원 : C
--400만원 ~ 499만원 : B
--500만원 이상(그외) : A
DECLARE 
    VID EMPLOYEE.EMP_ID%TYPE;
    VNAME EMPLOYEE.EMP_NAME%TYPE;
    VSALARY EMPLOYEE.SALARY%TYPE;
    SGRADE VARCHAR2(3);
BEGIN
    SELECT EMP_ID, EMP_NAME, SALARY
    INTO VID, VNAME, VSALARY
    FROM EMPLOYEE
    WHERE EMP_ID = '&EMPID';
    
    IF(VSALARY BETWEEN 0 AND 1000000) THEN SGRADE := 'F';
    ELSIF (VSALARY BETWEEN 1000000 AND 2000000) THEN SGRADE := 'E';
    ELSIF (VSALARY BETWEEN 2000000 AND 3000000) THEN SGRADE := 'D';
    ELSIF (VSALARY BETWEEN 3000000 AND 4000000) THEN SGRADE := 'C';
    ELSIF (VSALARY BETWEEN 4000000 AND 5000000) THEN SGRADE := 'B';
    ELSE SGRADE := 'A';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('사번 : '|| VID);
    DBMS_OUTPUT.PUT_LINE('이름 : '|| VNAME);
    DBMS_OUTPUT.PUT_LINE('급여 : '|| VSALARY);
    DBMS_OUTPUT.PUT_LINE('등급 : '|| SGRADE);
END;
/
    

























